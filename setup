#!/bin/bash

set -e

SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_PATH"

mkdir -p "$IMAGE_DIRECTORY_PATH"
cd "$IMAGE_DIRECTORY_PATH"

if [[ ! -d "$POSTGRES_OSM_DIR_NAME" ]];
then
	git clone "$POSTGRES_OSM_GITHUB_URL" "$POSTGRES_OSM_DIR_NAME"
fi
cd $POSTGRES_OSM_DIR_NAME
git checkout "$POSTGRES_OSM_VERSION"
cd ..


if [[ ! -d "$POSTGRES_MONITOR_DIR_NAME" ]];
then
	git clone "$POSTGRES_MONITOR_GITHUB_URL" "$POSTGRES_MONITOR_DIR_NAME"
fi
cd "$POSTGRES_MONITOR_DIR_NAME"
git checkout "$POSTGRES_MONITOR_VERSION"
cd ..


if [[ ! -d "$OSM2PGSQL_DIR_NAME" ]];
then
	git clone "$OSM2PGSQL_GITHUB_URL" "$OSM2PGSQL_DIR_NAME"
fi
cd "$OSM2PGSQL_DIR_NAME"
git checkout "$OSM2PGSQL_VERSION"
cd ..


if [[ ! -d "$SHAPEFILES_DIR_NAME" ]];
then
	git clone "$SHAPEFILES_GITHUB_URL" "$SHAPEFILES_DIR_NAME"
fi
cd "$SHAPEFILES_DIR_NAME"
git checkout "$SHAPEFILES_VERSION"
cd ..


if [[ ! -d "$OSM_BRIGHT_DIR_NAME" ]];
then
	git clone "$OSM_BRIGHT_GITHUB_URL" "$OSM_BRIGHT_DIR_NAME"
fi
cd "$OSM_BRIGHT_DIR_NAME"
git checkout "$OSM_BRIGHT_VERSION"
cd ..


if [[ ! -d "$RENDERD_DIR_NAME" ]];
then
	git clone "$RENDERD_GITHUB_URL" "$RENDERD_DIR_NAME"
fi
cd "$RENDERD_DIR_NAME"
git checkout "$RENDERD_VERSION"
cd ..

cd "$SCRIPT_PATH"

docker-compose build
